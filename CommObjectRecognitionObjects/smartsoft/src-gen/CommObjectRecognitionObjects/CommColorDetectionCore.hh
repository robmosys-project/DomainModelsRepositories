//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMOBJECTRECOGNITIONOBJECTS_COMMCOLORDETECTION_CORE_H_
#define COMMOBJECTRECOGNITIONOBJECTS_COMMCOLORDETECTION_CORE_H_

#include "CommObjectRecognitionObjects/CommColorDetectionData.hh"
#include "CommObjectRecognitionObjects/Color.hh"
#include "CommObjectRecognitionObjects/ROI.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommObjectRecognitionObjects {
	
class CommColorDetectionCore {
protected:
	// data structure
	CommObjectRecognitionObjectsIDL::CommColorDetection idl_CommColorDetection;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommObjectRecognitionObjectsIDL::CommColorDetection DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	CommColorDetectionCore();
	CommColorDetectionCore(const DATATYPE &data);
	// default destructor
	virtual ~CommColorDetectionCore();
	
	const DATATYPE& get() const { return idl_CommColorDetection; }
	operator const DATATYPE&() const { return idl_CommColorDetection; }
	DATATYPE& set() { return idl_CommColorDetection; }

	static inline std::string identifier(void) { return "CommObjectRecognitionObjects::CommColorDetection"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element Color
	inline CommObjectRecognitionObjects::Color getColor() const { return CommObjectRecognitionObjects::Color(idl_CommColorDetection.color); }
	inline CommColorDetectionCore& setColor(const CommObjectRecognitionObjects::Color &color) { idl_CommColorDetection.color = color; return *this; }
	
	// getter and setter for element Roi
	inline CommObjectRecognitionObjects::ROI getRoi() const { return CommObjectRecognitionObjects::ROI(idl_CommColorDetection.roi); }
	inline CommColorDetectionCore& setRoi(const CommObjectRecognitionObjects::ROI &roi) { idl_CommColorDetection.roi = roi; return *this; }
};

} /* namespace CommObjectRecognitionObjects */
#endif /* COMMOBJECTRECOGNITIONOBJECTS_COMMCOLORDETECTION_CORE_H_ */
