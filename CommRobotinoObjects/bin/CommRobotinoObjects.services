// --------------------------------------------------------------------------
//
//  Copyright (C) 2018 Servicerobotik Ulm
//
//  Service Robotics Research Center
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------

#import CommBasicObjects.*;
ServiceDefRepository CommRobotinoObjects version 1.0 
{
	/**
	 * Service for path-based navigation.
	 * A path is a virtual corridor a robot is allowed to navigate within.
	 */
	ForkingServiceDefinition PathNavigationGoalService {
		PushPattern<DataType=CommRobotinoObjects.CommPathNavigationGoal>
	}
	
	
	RequestAnswerServiceDefinition CommRobotinoIOValuesQueryService {
		QueryPattern < 
			RequestType 	= CommRobotinoObjects.CommRobotinoIOValues
			AnswerType 		= CommRobotinoObjects.CommRobotinoIOValues 
		>
	}
	
	ForkingServiceDefinition CommRobotinoIOForkingService {
		PushPattern <DataType=CommRobotinoObjects.CommRobotinoIOValues>
	}
	
	
	
	ForkingServiceDefinition CommRobotinoDigitalInputEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommDigitalInputEventParameter
			EventType 		= CommRobotinoObjects.CommDigitalInputEventResult
			EventStateType 	= CommRobotinoObjects.CommDigitalInputEventState
		>
	}
	
	
	ForkingServiceDefinition CommRobotinoDockingEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommRobotinoDockingEventParameter
			EventType 		= CommRobotinoObjects.CommRobotinoDockingEventResult
			EventStateType 	= CommRobotinoObjects.RobotinoDockingEventState 
		>
	}
	
	
	ForkingServiceDefinition CommPathNavigationEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommPathNavigationEventParameter
			EventType 		= CommRobotinoObjects.CommPathNavigationEventResult
			EventStateType 	= CommRobotinoObjects.PathNavigationEventState 
		>
	}
	
	ForkingServiceDefinition CommPathNavigationPoseRequestEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommPathNavigationPoseRequestEventParameter
			EventType 		= CommRobotinoObjects.CommPathNavigationPoseRequestEventResult
			EventStateType 	= CommRobotinoObjects.CommPathNavigationPoseRequestEventState 
		>
	}
	
	RequestAnswerServiceDefinition CommClosestNodeQueryService {
		QueryPattern < 
			RequestType 	= CommRobotinoObjects.CommClosestNodeRequest
			AnswerType 		= CommRobotinoObjects.CommClosestNodeAnswer 
		>
	}
	
	
	ForkingServiceDefinition CommNavigationPathChangeEvent {
		EventPattern < 
			ActivationType 	= CommBasicObjects.CommVoid
			EventType 		= CommRobotinoObjects.CommNavigationPaths
			EventStateType 	= CommRobotinoObjects.PathNavigationEventState 
		>
	}
	
	
	RequestAnswerServiceDefinition CommNavigationTimeQueryService {
		QueryPattern < 
			RequestType 	= CommRobotinoObjects.CommNavigationTimeRequest
			AnswerType 		= CommRobotinoObjects.CommNavigationTimeResponse 
		>
	}
	
	RequestAnswerServiceDefinition CommPathRequestQueryService {
		QueryPattern < 
			RequestType 	= CommRobotinoObjects.CommPathNavigationNodePathRequest
			AnswerType 		= CommRobotinoObjects.CommPathNavigationNodePathAnswer
		>
	}
	
	RequestAnswerServiceDefinition CommNodeRequestQueryService {
		QueryPattern < 
			RequestType 	= CommRobotinoObjects.CommPathNavigationNodeRequest
			AnswerType 		= CommRobotinoObjects.CommPathNavigationNodeAnswer
		>
	}
	
	RequestAnswerServiceDefinition CommPathNavigationPoseQueryService {
		QueryPattern < 
			RequestType 	= CommRobotinoObjects.CommPathNavigationPoseRequest
			AnswerType 		= CommRobotinoObjects.CommPathNavigationPoseAnswer
		>
	}
	
	
		
	ForkingServiceDefinition CommPathNetworkGraphEvent {
		EventPattern < 
			ActivationType 	= CommBasicObjects.CommVoid
			EventType 		= CommRobotinoObjects.CommNavigationGraph
			EventStateType 	= CommRobotinoObjects.CommNavigationGraph // dummy variable .. change this .. GAUTAM
		>
	}
	
	
	ForkingServiceDefinition CommPlannerGoalListService {
		PushPattern<DataType=CommRobotinoObjects.CommPlannerGoalList>
	}
	
	JoiningServiceDefinition CommPowerOutputSend {
		SendPattern < DataType = CommRobotinoObjects.CommRobotinoPowerOutputValue >
	}
	
	ForkingServiceDefinition RobotinoConveyerBeltEvent {
		EventPattern < 
			ActivationType 	= CommRobotinoObjects.CommRobotinoConveyerBeltEventParameter
			EventType 		= CommRobotinoObjects.CommRobotinoConveyerBeltEventResult
			EventStateType 	= CommRobotinoObjects.RobotinoConveyerBeltEventState 
		>
	}
	
	
	ForkingServiceDefinition CommNavigationPathCorridorService {
		EventPattern < 
			ActivationType 	= CommBasicObjects.CommVoid
			EventType 		= CommRobotinoObjects.CommNavigationPaths
			EventStateType 	= CommRobotinoObjects.PathNavigationEventState 
		>
	}

	
}