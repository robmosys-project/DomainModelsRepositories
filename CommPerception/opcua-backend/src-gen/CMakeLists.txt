CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

PROJECT("CommPerceptionOpcUa" VERSION 1.0)

FIND_PACKAGE(Open62541Cpp QUIET)
SET(SmartSoft_CD_API_DIR $ENV{SMART_ROOT_ACE}/modules)
FIND_PACKAGE(SeRoNetSDK QUIET)

IF(SeRoNetSDK_FOUND)
	SET(CMAKE_CXX_STANDARD 14)
	
	FILE(GLOB OPCUA_SRCS ${PROJECT_SOURCE_DIR}/${PROJECT_NAME}/*.cc)
	FILE(GLOB OPCUA_HDRS ${PROJECT_SOURCE_DIR}/${PROJECT_NAME}/*.hh)
	# find depndency CommPerceptionOpcUa
	FIND_PACKAGE(CommBasicObjectsOpcUa PATHS $ENV{SMART_ROOT_ACE}/modules)
	# find depndency CommPerceptionOpcUa
	FIND_PACKAGE(CommObjectRecognitionObjectsOpcUa PATHS $ENV{SMART_ROOT_ACE}/modules)
	
	ADD_LIBRARY(${PROJECT_NAME} SHARED ${OPCUA_SRCS})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} CommPerception SeRoNetSDK::SeRoNetSDK)
	# link depndency CommBasicObjects
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} CommBasicObjectsOpcUa)
	# link depndency CommObjectRecognitionObjects
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} CommObjectRecognitionObjectsOpcUa)
	TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
	$<INSTALL_INTERFACE:include>
	)
	
	ADD_DEPENDENCIES(autoinstall ${PROJECT_NAME})
	
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}Config.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake @ONLY)
	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake DESTINATION modules)
	
	IF(DEFINED ${PROJECT_NAME}_VERSION)
		SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${${PROJECT_NAME}_VERSION} SOVERSION ${${PROJECT_NAME}_VERSION_MAJOR})
		INCLUDE(CMakePackageConfigHelpers)
		write_basic_package_version_file(${PROJECT_NAME}ConfigVersion.cmake COMPATIBILITY SameMajorVersion)
		IF(EXISTS ${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake)
			INSTALL(FILES ${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake DESTINATION modules)
			SMART_TRACE_GENERATED_FILE(${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake)
		ENDIF(EXISTS ${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake)
	ENDIF(DEFINED ${PROJECT_NAME}_VERSION)
	
	INSTALL(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}Targets DESTINATION lib)
	EXPORT(EXPORT ${PROJECT_NAME}Targets)
	INSTALL(EXPORT ${PROJECT_NAME}Targets DESTINATION modules)
	INSTALL(FILES ${OPCUA_HDRS} DESTINATION include/${PROJECT_NAME})
ENDIF(SeRoNetSDK_FOUND)
