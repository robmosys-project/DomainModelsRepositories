//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommPerception/ObjectCoreACE.hh"
#include <ace/SString.h>
#include "CommBasicObjects/CommPose3dACE.hh"
#include "CommObjectRecognitionObjects/CommObjectRelationACE.hh"
#include "CommPerception/CommPoint2dACE.hh"

// serialization operator for element ObjectCore
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommPerceptionIDL::ObjectCore &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element is_valid
	good_bit = good_bit && cdr.write_boolean(data.is_valid);
	// serialize list-element object_id
	good_bit = good_bit && cdr.write_ulong(data.object_id);
	// serialize list-element object_type
	good_bit = good_bit && cdr << ACE_CString(data.object_type.c_str());
	// serialize list-element point2d
	good_bit = good_bit && cdr << data.point2d;
	// serialize list-element pose
	good_bit = good_bit && cdr << data.pose;
	// serialize list-element relations
	good_bit = good_bit && cdr << data.relations;
	// serialize list-element fill_level
	good_bit = good_bit && cdr.write_double(data.fill_level);
	// serialize list-element surface_poses
	good_bit = good_bit && cdr << data.surface_poses;
	
	return good_bit;
}

// de-serialization operator for element ObjectCore
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommPerceptionIDL::ObjectCore &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element is_valid
	good_bit = good_bit && cdr.read_boolean(data.is_valid);
	// deserialize type element object_id
	good_bit = good_bit && cdr.read_ulong(data.object_id);
	// deserialize string-type element object_type
	ACE_CString data_object_type_str;
	good_bit = good_bit && cdr >> data_object_type_str;
	data.object_type = data_object_type_str.c_str();
	// deserialize type element point2d
	good_bit = good_bit && cdr >> data.point2d;
	// deserialize type element pose
	good_bit = good_bit && cdr >> data.pose;
	// deserialize type element relations
	good_bit = good_bit && cdr >> data.relations;
	// deserialize type element fill_level
	good_bit = good_bit && cdr.read_double(data.fill_level);
	// deserialize type element surface_poses
	good_bit = good_bit && cdr >> data.surface_poses;
	
	return good_bit;
}

// serialization operator for CommunicationObject ObjectCore
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommPerception::ObjectCore &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject ObjectCore
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommPerception::ObjectCore &obj)
{
	return cdr >> obj.set();
}
